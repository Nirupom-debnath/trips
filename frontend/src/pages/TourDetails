import React, { useContext, useEffect, useRef, useState } from "react";
import { useParams } from "react-router-dom";
import avatar from "../assets/images/avatar.jpg";
import { FaPeopleGroup, FaLocationDot } from "react-icons/fa6";
import { FaStar, FaMapPin, FaCity, FaDollarSign } from "react-icons/fa";
import CalculateAvg from "../utils/CalculateAvg";
import Booking from "../components/Booking/Booking";
import { toast } from "react-toastify";
import useFetch from "../hooks/useFetch";
import BASE_URL from "../utils/config";
import { AuthContext } from "../context/AuthContext";

const TourDetails = () => {
  const { user } = useContext(AuthContext);
  const reviewMsgRef = useRef();
  const [tourRating, setTourRating] = useState();
  const { id } = useParams();

  useEffect(() => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  }, []);

  const { apiData: tour, error } = useFetch(`${BASE_URL}/tour/${id}`, {
    method: "GET",
  });
  const {
    title = "",
    photo = "",
    desc = "",
    price = "",
    reviews = "",
    city = "",
    distance = "",
    maxGroupSize = "",
    address = "",
  } = tour || {};
  const reviewsArray = Array.isArray(reviews) ? reviews : [];
  const { totalRating, avgRating } = CalculateAvg(reviewsArray);
  const options = { day: "numeric", month: "long", year: "numeric" };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const reviewText = reviewMsgRef.current.value;
try {
      if (user) {
        const reviewData = {
          username: user.username,
          reviewText,
          rating: tourRating,
        };
        const response = await fetch(`${BASE_URL}/review/${id}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(reviewData),
        });
        const result = await response.json();
        if (response.ok) {
          window.location.reload();
        } else {
          toast.error(result.message);
        }
      }
      if (!user || user === null || user === undefined) {
        toast.error("Please Sign In first");
      }
    } catch (err) {
      toast.error("Server not responding");
      console.log(err);
    }
  };

  return (
    <section className="my-4 px-12 w-full">
      <div>
        <div>
          <div className="flex flex-col md:flex-row gap-6">
            <div className="flex-shrink-0">
              <div className="max-w-3xl max-h-[400px]  rounded-md overflow-hidden">
                <img src={photo} alt={title} />
              </div>
              <div className=" my-8 overflow-hidden border-solid border-[2px] shadow-sm border-gray-200 rounded-md space-y-4 px-2 py-2 md:px-8 md:py-8 mx-auto">
                <h2 className="text-[25px] md:text-[40px]  font-bold mb-4 text-center md:text-start text-BaseColor">
                  {title}
                </h2>
                <div className="flex flex-col md:flex-row md:items-center gap-2 md:gap-12">
                  <div className="flex items-center gap-2">
                    <i>
                      <FaStar />
                    </i>
                    <span>
                      {avgRating} ({reviewsArray.length})
                    </span>
                  </div>
                  <div className="flex items-center gap-2">
                    <i>
                      <FaMapPin />
                    </i>
                    <span>{address}</span>
                  </div>
                </div>
                <div className="flex flex-col md:flex-row md:items-center gap-2 md:gap-12">
                  <div className="flex items-center gap-2">
                    <i>
                      <FaCity />
                    </i>
                    <span>{city}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <i>
                      <FaLocationDot />
                    </i>
                    <span>{distance}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <i>
                      <FaDollarSign />
                    </i>
                    <span>Rs. {price}/per head</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <i>
                      <FaPeopleGroup />
                    </i>
                    <span>{maxGroupSize}</span>
                  </div>
                </div>
                <h3 className="text-[22px] text-center md:text-start md:text-[30px]">
                  Description
                </h3>
                <p className="mobpara md:para">{desc}</p>
              </div>
